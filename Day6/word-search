class Solution(object):
    def exist(self, board, word):
        rows = len(board)
        cols = len(board[0])
        def f(r,c,i):
            if i == len(word):
                return True
            if r < 0 or r >= rows or c < 0 or c >= cols or board[r][c] != word[i]:
                return False
            temp = board[r][c]
            board[r][c] = 0
            found = (dfs(r - 1, c, i + 1) or  # Up
                     dfs(r + 1, c, i + 1) or  # Down
                     dfs(r, c - 1, i + 1) or  # Left
                     dfs(r, c + 1, i + 1))    # Right
            board[r][c] = temp
            return found
            for m in range(rows):
                for n in range(cols):
                    if board[m][n]== word[0]:
                        if f(m,n,0):
                            return True
            return False


        
