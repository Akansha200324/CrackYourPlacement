class Solution(object):
    def threeSum(self, nums):
        # subarrays=[]
        # for start in range(len(nums)):
        #     for end in range(start + 1, len(nums) + 1):
        #         subarray = nums[start:end]
        #         if(len(subarray)==3) and (sum(subarray)==0):
        #             subarrays.append(tuple(subarray))
        # unique_subarrays = list(set(subarrays))
        
        # return [list(tup) for tup in unique_subarrays]

        nums.sort()
        triplets = []
        
        for i in range(len(nums) - 2):
            if i > 0 and nums[i] == nums[i - 1]:
                continue  
            left, right = i + 1, len(nums) - 1
            while left < right:
                total = nums[i] + nums[left] + nums[right]
                if total == 0:
                    triplets.append([nums[i], nums[left], nums[right]])
                    while left < right and nums[left] == nums[left + 1]:
                        left += 1  
                    while left < right and nums[right] == nums[right - 1]:
                        right -= 1  
                    left += 1
                    right -= 1
                elif total < 0:
                    left += 1
                else:
                    right -= 1
        return triplets

