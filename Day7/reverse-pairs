class Solution(object):
    def reversePairs(self, nums):
        if not nums:
            return 0
        def merge_sort_and_count(start, end):
            if start >= end:
                return 0
            mid = (start + end) // 2
            count = merge_sort_and_count(start, mid) + merge_sort_and_count(mid + 1, end)
            j = mid + 1
            for i in range(start, mid + 1):
                while j <= end and nums[i] > 2 * nums[j]:
                    j += 1
                count += j - (mid + 1)
            temp = []
            l, r = start, mid + 1
            while l <= mid and r <= end:
                if nums[l] <= nums[r]:
                    temp.append(nums[l])
                    l += 1
                else:
                    temp.append(nums[r])
                    r += 1
            while l <= mid:
                temp.append(nums[l])
                l += 1
            while r <= end:
                temp.append(nums[r])
                r += 1
            for i in range(len(temp)):
                nums[start + i] = temp[i]
            return count
        return merge_sort_and_count(0, len(nums) - 1)

